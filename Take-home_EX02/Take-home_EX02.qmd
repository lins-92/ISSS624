---
title: "Take-home Exercise 2"
editor: visual
---

# Regionalisation Using Water Point Availability in Nigeria

In the last take-home exercise ([link](https://lins-92-isss624.netlify.app/take-home_ex01/take-home_ex01)), I analysed the spatial distribution of proportion of non-functional waterpoints in Nigeria. I found that there is uneven distribution in the proportion of functional and non-functional waterpoints in each administrative area, which has implications of availability of water supply and maintenance.

In this exercise, I will segment Nigeria into different regions based on the availability of waterpoints, type of waterpoints and usage capacity to identify regions to give recommendations to improve water supply or maintenance.

The following variables will be used (from [exercise write-up](https://isss624-ay2022-23nov.netlify.app/take-home_ex02)):

-   Total number of functional water points

-   Total number of nonfunctional water points

-   Percentage of functional water points

-   Percentage of non-functional water points

-   Percentage of main water point technology (i.e. Hand Pump)

-   Percentage of usage capacity (i.e. \< 1000, \>=1000)

-   Percentage of rural water points

## 1. Setting Up

### Loading Packages

We will use the following packages:

-   `sf`: import geospatial datasets

-   `tidyverse`: manipulate aspatial data

-   `spdep`: compute spatial weights and autocorrelation

-   `tmap`: plot maps

-   `funModeling`: quick exploratory data analysis

```{r}
#| output: false
#| message: false

pacman::p_load(rgdal, spdep, tmap, sf, 
               ggpubr, cluster, factoextra, NbClust,
               heatmaply, corrplot, psych, tidyverse,
               dendextend, GGally, funModeling)
```

### Loading Data

The following code chunk was used to pre-process the dataset downloaded from [Water Point Data Exchange (WPdx)](https://www.waterpointdata.org/about/) to keep only waterpoints in Nigeria and some relevant variables. It is not run on this page due to the size of the ddataset. The dataset can be found [here](https://data.waterpointdata.org/dataset/Water-Point-Data-Exchange-Plus-WPdx-/eqje-vguj/data) and the data dictionary [here](https://www.waterpointdata.org/wp-content/uploads/2020/11/WPDx_Standardized_Hashtags_11-11-2020.pdf). The data is in csv format with latitude and longitude information.

```{r}
#| eval: false
#not run

raw <- read_csv("data/WPdx_plus_full.csv") %>%
  filter(`#clean_country_name`=="Nigeria") %>%
  select(c(3:4, 9, 22, 46:47)) %>%
  write_rds("data/WPdx_plus_Nigeria.rds")
```

Let's load the pre-processed dataset and view the dataset.

```{r}
wp <- read_rds("data/WPdx_plus_Nigeria.rds")

glimpse(wp)
```

The following code chunk cleans variables names that contain the special character "\#" and recategorises the well status into 3 broad categories (functional, non-functional and unknown).

```{r}
wp <- read_rds("data/WPdx_plus_Nigeria.rds") %>%
  rename_with(~str_replace(.x, "#", "")) %>%
  mutate(status_clean=replace_na(status_clean, "Unknown")) %>%
  mutate(status = case_when(
    status_clean %in% c("Abandoned/Decommissioned", 
                        "Abandoned",
                        "Non-Functional",
                        "Non functional due to dry season",
                        "Non-Functional due to dry season") ~ "Nonfunctional",
    status_clean == "Unknown" ~ "Unknown",
    status_clean %in% c("Functional", 
                        "Functional but not in use",
                        "Functional but needs repair") ~ "Functional"
  )) %>%
  select(!status_clean)
```

Although some of the clustering variables have already been specified in the exercise write-up, we should still study the variables.

```{r}
freq(wp, input="is_urban")
```

```{r}
freq(wp, input="water_tech_clean")
```

We can then convert the wp tibble dataframe to an sf dataframe. The GCS of the data is WGS1984 (EPSG:4326) as stated in the data dictionary.

```{r}
wp_sf <- st_as_sf(wp, 
                  coords = c("lon_deg", "lat_deg"),
                  crs=4326) 
```
